name: Create Release

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  watch:
    paths:
      - CHANGELOG.md

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Extract version from CHANGELOG.md
        id: extract_version
        run: |
          version=$(grep -oP '## \[\K[^\]]+' CHANGELOG.md | head -1)
          echo "version=$version" >> $GITHUB_ENV
          echo "Extracted version: $version"

      - name: Check and stop if tag exists
        id: check_and_stop
        run: |
          if git rev-parse "refs/tags/${{ env.version }}" >/dev/null 2>&1; then
            echo "Tag already exists, skipping release creation."
            exit 0
          fi

      - name: Extract release notes from CHANGELOG.md
        id: extract_notes
        run: |
          tag_line=$(grep -n "## \[${{ env.version }}\]" CHANGELOG.md | cut -d: -f1)
          next_tag_line=$(grep -n "## \[" CHANGELOG.md | grep -A 1 "^$tag_line:" | tail -n 1 | cut -d: -f1)
          if [[ -z "$next_tag_line" || "$next_tag_line" -le "$tag_line" ]]; then
            next_tag_line=$(wc -l < CHANGELOG.md)
          fi
          release_notes=$(sed -n "${tag_line},${next_tag_line}p" CHANGELOG.md | sed '$d')
          echo "release_notes<<EOF" >> $GITHUB_ENV
          echo "$release_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Debug release notes
        run: |
          echo "Release notes: ${{ env.release_notes }}"

      - name: Create GitHub Release
        run: |
          gh auth login --with-token <<< "${{ secrets.RELEASE_TOKEN }}"
          gh release create "${{ env.version }}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="Release ${{ env.version }}" \
              --notes="${{ env.release_notes }}"
