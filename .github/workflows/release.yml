name: Create Release

on:
  push:
    branches:
      - master
  workflow_dispatch:
  watch:
    paths:
      - CHANGELOG.md

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract version from CHANGELOG.md
        id: extract_version
        run: |
          version=$(grep -oP '## \[\K[^\]]+' CHANGELOG.md | head -1)
          echo "version=$version" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "refs/tags/${{ env.version }}" >/dev/null 2>&1; then
            echo "Tag already exists."
            exit 0
          fi

      - name: Extract release notes from CHANGELOG.md
        id: extract_notes
        run: |
          tag_line=$(grep -n "## \[${{ env.version }}\]" CHANGELOG.md | cut -d: -f1)
          next_tag_line=$(grep -n -A 1 "## \[${{ env.version }}\]" CHANGELOG.md | tail -n 1 | cut -d: -f1)
          if [ -z "$next_tag_line" ]; then
            next_tag_line=$(wc -l < CHANGELOG.md)
          fi
          release_notes=$(sed -n "$tag_line,${next_tag_line}p" CHANGELOG.md | tail -n +2)
          echo "release_notes<<EOF" >> $GITHUB_ENV
          echo "$release_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          body: ${{ env.release_notes }}
          draft: false
          prerelease: false
